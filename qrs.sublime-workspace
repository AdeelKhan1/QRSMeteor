{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fa",
				"false"
			],
			[
				"set",
				"setTimeout"
			],
			[
				"re",
				"refresh"
			],
			[
				"consol",
				"console.log('insert"
			],
			[
				"user",
				"updateUserFormStep1"
			],
			[
				"up",
				"updatedUser"
			],
			[
				"De",
				"Developer"
			],
			[
				"con",
				"console"
			],
			[
				"dy",
				"dummyCustomer"
			],
			[
				"dumm",
				"dummyCustomer"
			],
			[
				"console",
				"console.log"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"high",
				"highlighted"
			],
			[
				"for",
				"formattedResponse〔function〕"
			],
			[
				"on",
				"onRendered"
			],
			[
				"slid",
				"slideNr"
			],
			[
				"slide",
				"slideActive"
			],
			[
				"ac",
				"activeStepNr"
			],
			[
				"sli",
				"slideNr"
			],
			[
				"inte",
				"integrationSlide"
			],
			[
				"cur",
				"currentStepNr"
			],
			[
				"curre",
				"currentSlide"
			],
			[
				"cosn",
				"console.log('button"
			],
			[
				"marg",
				"margin-left"
			],
			[
				"mar",
				"margin"
			],
			[
				"thank",
				"thankYou"
			],
			[
				"Ses",
				"Session.set('clickedInSelection"
			],
			[
				"block",
				"blockquote"
			],
			[
				"MAR",
				"margin-top"
			],
			[
				"data",
				"data-rotate"
			],
			[
				"background-c",
				"background-color"
			],
			[
				"gene",
				"generator"
			],
			[
				"di",
				"div\tTag"
			],
			[
				"tex",
				"text-align"
			],
			[
				"wid",
				"width"
			],
			[
				"te",
				"text-align"
			],
			[
				"min",
				"min-height"
			],
			[
				"font",
				"font-size"
			],
			[
				"tr",
				"target\tAttr"
			],
			[
				"yout",
				"youtube"
			],
			[
				"so",
				"sortedArray"
			],
			[
				"po",
				"position"
			],
			[
				"ta",
				"tableWithChapters"
			],
			[
				"curren",
				"currentRow"
			],
			[
				"cu",
				"currentRow"
			],
			[
				"new",
				"newTableWithChapter〔variable〕"
			],
			[
				"curr",
				"currentRow〔argument〕"
			],
			[
				"current",
				"currentLevel1"
			],
			[
				"Sess",
				"Session.get('selectedDataSet"
			],
			[
				"last",
				"lastLevelRead"
			],
			[
				"of",
				"overflow"
			],
			[
				"co",
				"color"
			],
			[
				"fon",
				"font-size"
			],
			[
				"conc",
				"console.log('convert"
			],
			[
				"le",
				"level"
			],
			[
				"height",
				"height: 〔property〕"
			],
			[
				"getval",
				"getLocalValuesOfLevel"
			],
			[
				"cons",
				"console.log('convert"
			],
			[
				"ses",
				"sessionName〔variable〕"
			],
			[
				"getl",
				"getLevel1and2Names〔function〕"
			],
			[
				"h",
				"haystack"
			],
			[
				"get",
				"getLeven1to3"
			],
			[
				"you",
				"youtube"
			],
			[
				"lo",
				"location"
			],
			[
				"Tr",
				"Tracker.autorun"
			],
			[
				"main",
				"mainTopics"
			],
			[
				"qi",
				"qixschema"
			],
			[
				"ap",
				"appChangeListener"
			],
			[
				"fun",
				"function〔keyword〕"
			],
			[
				"in",
				"instance"
			],
			[
				"conso",
				"console.log('get"
			],
			[
				"top",
				"topics〔variable〕"
			],
			[
				"par",
				"parent〔variable〕"
			],
			[
				"level",
				"level3Data"
			],
			[
				"leve",
				"level3Data"
			],
			[
				"de",
				"depth"
			],
			[
				"fo",
				"font-size"
			],
			[
				"app",
				"appId〔argument〕"
			],
			[
				"cre",
				"createList〔function〕"
			],
			[
				"ini",
				"initEnigma〔function〕"
			],
			[
				"U",
				"URLtoOpen"
			],
			[
				"integr",
				"integrationTopics"
			],
			[
				"initia",
				"initialized"
			],
			[
				"margi",
				"margin-left"
			],
			[
				"imp",
				"impressInitialized〔variable〕"
			],
			[
				"cente",
				"centered"
			],
			[
				"pos",
				"positioning"
			],
			[
				"ins",
				"insertDummyCustomers"
			],
			[
				"redirect",
				"redirectUrl"
			],
			[
				"insert",
				"insertCustomer"
			],
			[
				"sho",
				"showIFrame"
			],
			[
				"QM",
				"QMCUrl"
			],
			[
				"url",
				"URLtoOpen"
			],
			[
				"hu",
				"hubUrl"
			],
			[
				"ur",
				"URLtoOpen"
			],
			[
				"simu",
				"simulateUserLogin"
			],
			[
				"n",
				"numberAffectedDocuments"
			],
			[
				"sess",
				"Session"
			],
			[
				"step",
				"step"
			],
			[
				"Te",
				"Template"
			],
			[
				"Tem",
				"TemplateApps"
			],
			[
				"template",
				"templateSelected"
			],
			[
				"ste",
				"stepNr"
			],
			[
				"st",
				"stepStatus"
			],
			[
				"ce",
				"checkboxValue"
			],
			[
				"pr",
				"provisioning"
			],
			[
				"fu",
				"function"
			],
			[
				"tem",
				"templateCheckBox"
			],
			[
				"redi",
				"redirectUser"
			],
			[
				"sequ",
				"sequenceDiagrams"
			],
			[
				"API",
				"ApiLogsTable"
			],
			[
				"web",
				"webIntegration"
			],
			[
				"video",
				"videoOverview2"
			],
			[
				"customer",
				"customerOverview"
			],
			[
				"temp",
				"templateOverview"
			],
			[
				"generationA",
				"generationApps"
			],
			[
				"gee",
				"generationStreams"
			],
			[
				"doc",
				"documentation"
			],
			[
				"sett",
				"settings"
			],
			[
				"is",
				"isReady"
			],
			[
				"fresh",
				"freshEnvironment"
			],
			[
				"cos",
				"console"
			],
			[
				"sec",
				"securityFlow"
			],
			[
				"logge",
				"loggedInUser"
			],
			[
				"cust",
				"customers"
			],
			[
				"tic",
				"ticketResponse"
			],
			[
				"ge",
				"generationUserId"
			],
			[
				"tick",
				"ticketRequestBody"
			]
		]
	},
	"buffers":
	[
		{
			"file": "imports/ui/impress/ppt_integration.html",
			"settings":
			{
				"buffer_size": 6728,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "settings-development.json",
			"settings":
			{
				"buffer_size": 2007,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "import { senseConfig } from '/imports/api/config.js';\nimport './ppt_integration.html';\nimport lodash from 'lodash';\nimport hljs from 'highlight.js';\n_ = lodash;\n\nvar showdown = require('showdown');\nvar converter = new showdown.Converter();\nconst enigma = require('enigma');\n// The QIX schema needed by enigma.js\nconst qixschema = require('/node_modules/enigma.js/schemas/qix/3.1/schema.json');\n\nvar appId = Meteor.settings.public.IntegrationPresenatationApp;\nvar IntegrationPresenatationSelectionSheet = 'DYTpxv';\nvar IntegrationPresenatationSortedDataObject = 'pskL';\nvar slideWidth = 2000;\n\n\nTemplate.ppt_integrationMain.onRendered(function() {\n    // Session.set('clickedInSelection', false);\n    this.$('.ui.sidebar')\n        .sidebar('toggle');\n});\n\nTemplate.ppt_integration.onRendered(function() {\n    Session.set('slideLoading', true);\n    getLevel1to3('integrationTopics');\n    getLevel1And2();\n    appChangeListener();\n\n    $('#impress').on('impress:stepenter', function() {\n        $('.slideContent').css({ \"visibility\": \"visible\" });\n        var step = $(this);\n\n        //ensure we only show the content of the current step via IF condition in the template (only show content if slideNr = currentSlide)\n        var activeStep = $(this).find('.active.step').attr('id');\n        //convert the id value step-2 to 2\n        var activeStepNr = activeStep.substr(activeStep.indexOf(\"-\") + 1);\n        Session.set('activeStepNr', activeStepNr);\n\n    });\n})\n\nTemplate.integrationSlideContent.onRendered(function() {\n\n    //init the youtube videos via semanticUI\n    this.$('.ui.embed').embed();\n\n    this.$('.markdownItem, .videoPlaceholder').transition({\n        animation: 'fade in',\n        duration: '3s',\n    });\n\n    this.$('img').transition({\n        animation: 'fade in',\n        duration: '3s',\n    });\n\n    this.$('blockquote').transition({\n        animation: 'fade in',\n        duration: '5s',\n    });\n\n    //make sure all code gets highlighted using highlight.js\n    this.$('pre code').each(function(i, block) {\n        hljs.highlightBlock(block);\n    });\n\n    //ensure all links open on a new tab\n    this.$('a[href^=\"http://\"], a[href^=\"https://\"]').attr('target', '_blank');\n\n})\n\nTemplate.ppt_integrationMain.helpers({\n    showPresentation() {\n        // console.log('show the IFRAME');\n        return Session.get('showPresentation'); //&& Session.get('clickedInSelection');\n    },\n    IFrameURLChapterSelection() {\n        return 'http://' + senseConfig.host + ':' + senseConfig.port + '/' + 'anon' + '/single/?appid=' + appId + '&sheet=' + IntegrationPresenatationSelectionSheet + '&opt=currsel';\n    },\n    browserIsEdgeOrMobile() {\n        return isIEorEDGE() || isMobile() === true ? true : '';\n    }\n})\n\nfunction isIEorEDGE() {\n    console.log('navigator.appName ', navigator.appName);\n    return navigator.appName == 'Microsoft Internet Explorer' || (navigator.appName == \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1);\n}\n\nfunction isMobile() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ? true : false;\n}\n\nTemplate.ppt_integration.helpers({\n    mainTopics() {\n        return Session.get('mainTopics'); //only the level 1 and 2 colums, we need this for the headers of the slide\n    },\n    // topics() {\n    //     return Session.get('integrationTopics'); //all level 1 2 and 3 data, we need level 3 for the bullets/images of the slide\n    // },\n    chapterSlide(currentRow) {\n        if (typeof(currentRow) === 'string') { //we got a chapter slide\n            // console.log('we found a chapter slide', currentRow);\n            return true\n        }\n    },\n    XValue(index) {\n        return setXValue(index);\n    },\n    loading() {\n        return Session.get('slideLoading');\n    },\n    thankYouXvalue() {\n        return Session.get('currentSlideNumber') * slideWidth;\n    }\n});\n\nTemplate.integrationSlide.helpers({\n    level(level, slide) {\n        return textOfLevel(slide, level);\n    },\n    XValue(index) {\n        Session.set('currentSlideNumber', index);\n        return slideWidth * index;\n        // return setXValue(index);\n    },\n    slideActive(slideNr) {\n        //active slide gets set via impress, that fires an event. see ppt_integration.onRendered\n        return Session.get('activeStepNr') >= slideNr + 1;\n    },\n    step() {\n        return Session.get('activeStepNr');\n    }\n})\n\nTemplate.integrationSlideContent.helpers({\n    itemsOfLevel: function(level, slide) { //get all child items of a specific level, normally you will insert level 3 \n        var parents = slide[level - 3].qText + slide[level - 2].qText; //get the names of the parents of the current slide (level 1 and 2)\n        if (parents) {\n            // console.log('Parent is not empty:', parents);\n            return getLocalValuesOfLevel(parents); //using the parent, get all items that have this name as parent\n        }\n    },\n    formatted(text) {\n        if (youtube_parser(text)) { //youtube video url\n            // console.log('found an youtube link so embed with the formatting of semantic ui', text)\n            var videoId = youtube_parser(text);\n            var html = '<div class=\"ui container videoPlaceholder\"><div class=\"ui embed\" data-source=\"youtube\" data-id=\"' + videoId + '\" data-icon=\"video\" data-placeholder=\"images/youtube.jpg\"></div></div>'\n                // console.log('generated video link: ', html);\n            return html;\n        } else if (text.startsWith('<')) { //custom HTML\n            return text;\n        } else if (checkTextIsImage(text)) { //image\n            // console.log('found an image', text)\n            return '<img class=\"ui huge centered integration image\"  src=\"images/' + text + '\">'\n        } else { //text, convert the text (which can include markdown syntax) to valid HTML\n            var result = converter.makeHtml(text);\n            if (result.substring(1, 11) === 'blockquote') {\n                return '<div class=\"ui green very padded segment\">' + result + '</div>';\n            } else {\n                return '<div class=\"markdownItem\">' + result + '</div>';\n            }\n        }\n    }\n})\n\nTemplate.ppt_integrationMain.events({\n    'click .launch': function(event) {\n        // console.log('button clicked');\n        $('.ui.sidebar')\n            .sidebar('toggle');\n    },\n    'click .button': function(event) {\n        console.log('button clicked');\n        $('.ui.sidebar')\n            .sidebar('toggle');\n        Session.set('showPresentation', true);\n    },\n    'mouseover .sidebar.integration': function(event) {\n        Session.set('showPresentation', false);\n    },\n    'mouseout .sidebar.integration': function(event) {\n        Session.set('showPresentation', true);\n    }\n})\n\n\nfunction setXValue(index) {\n    Session.set('currentSlideNumber', index);\n    return slideWidth * index;\n}\n\nfunction textOfLevel(row, level) {\n    level -= 1\n    return row[level].qText\n}\n\nfunction getLevel1and2Names(slide) {\n    return slide[0].qText + '-' + slide[1].qText;\n}\n\nfunction checkTextIsImage(text) {\n    return (text.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n}\n\nfunction youtube_parser(url) {\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n    var match = url.match(regExp);\n    console.log('de url '+ url + ' is een match met youtube? '+ (match && match[7].length == 11));\n    return (match && match[7].length == 11) ? match[7] : false;\n}\n\nvar setCurrentSlideEventHelper = function() {\n    $(document).on('impress:stepenter', function(e) {\n        var currentSlide = $(e.target).attr('id');\n        Session.set('currentSlide', currentSlide);\n    });\n}\n\nvar getLocalValuesOfLevel = function(parentText) {\n    // console.log('get all level 3 for level 2 with text:', parentText);\n    var result = [];\n    var topics = Session.get('integrationTopics'); //the level 1 and 2 values\n    var level3Data = _.filter(topics, function(row) {\n            var parents = row[0].qText + row[1].qText;\n            if (parents === parentText) { //if the current level 1 and 2 combination matches \n                if (row[2].qText) { result.push(row[2].qText) } //add the level 3 value to the new level3Data array\n            }\n        })\n        // console.log('level3Data:', result);\n    return result;\n}\n\nfunction getLevel1And2() {\n\n    // Set up connection to QIX, see https://github.com/mindspank/enigma-table-rows-example/blob/master/index.js\n\n    enigma.getService('qix', {\n            schema: qixschema,\n            appId: appId,\n            session: { //https://github.com/qlik-oss/enigma.js/blob/master/docs/qix/configuration.md#example-using-nodejs\n                host: senseConfig.host,\n                prefix: 'anon',\n                port: senseConfig.port,\n                unsecure: true\n            }\n        })\n        .then(qix => {\n            qix.app.getObject(IntegrationPresenatationSortedDataObject) //get an existing object out of an app, if you import an app this stays the same\n                .then(model => {\n                    model.getHyperCubeData('/qHyperCubeDef', [{ qTop: 0, qLeft: 0, qWidth: 3, qHeight: 1000 }]).then(data => {\n                        // console.log('Result set from Qlik Sense:', data);\n                        var table = data[0].qMatrix;\n                        var tableWithChapters = insertSectionBreakers(table);\n                        console.log('Slides loaded, and we added extra chapter breakers. Object now stored in in session var mainTopics, so slides can be created by impress.js', tableWithChapters);\n                        Session.set('mainTopics', tableWithChapters)\n                        Meteor.setTimeout(function() {\n\n                            impress().init();\n                            impress().goto(0);\n                            $('.slideContent').css({ \"visibility\": \"hidden\" }); //prevent an issue when impress has qlik sense embedded via iframes...\n                            Session.set('slideLoading', false);\n                        }, 100);\n                    })\n                })\n        })\n}\n\n\nvar appChangeListener = function appChangeListener() {\n    enigma.getService('qix', {\n            schema: qixschema,\n            appId: appId,\n            session: { //https://github.com/qlik-oss/enigma.js/blob/master/docs/qix/configuration.md#example-using-nodejs\n                host: senseConfig.host,\n                prefix: 'anon',\n                port: senseConfig.port,\n                unsecure: true\n            }\n        })\n        .then(qix => {\n            qix.app.on('changed', () => {\n                // console.log('QIX instance change event received, so get the new data set out of Qlik Sense');\n                // getLevel1to3('selectedDataSet');\n                location.reload();\n            });\n        })\n}\n\nfunction getValuesOfLevel(level) {\n    console.log('getLocalValuesOfLevel: ', level);\n\n    enigma.getService('qix', {\n            schema: qixschema,\n            appId: appId,\n            session: { //https://github.com/qlik-oss/enigma.js/blob/master/docs/qix/configuration.md#example-using-nodejs\n                host: senseConfig.host,\n                prefix: 'anon',\n                port: senseConfig.port,\n                unsecure: true\n            }\n        })\n        .then(qix => {\n\n            qix.app.createSessionObject({\n                    qInfo: { qType: 'cube' },\n                    qHyperCubeDef: {\n                        qDimensions: [{\n                            qDef: { qFieldDefs: [level] }\n                        }]\n                    }\n                })\n                .then(model => {\n                    model.getHyperCubeData('/qHyperCubeDef', [{ qTop: 0, qLeft: 0, qWidth: 3, qHeight: 3333 }]).then(data => {\n                        // console.log('Result set from Qlik Sense:', data);\n                        var table = data[0].qMatrix;\n                        // console.log('Level ' + level + ' data:', table);\n                        Session.set('level3Data', table)\n                    })\n                })\n        })\n}\n\nfunction getLevel1to3(sessionName) {\n    enigma.getService('qix', {\n            schema: qixschema,\n            appId: appId,\n            session: { //https://github.com/qlik-oss/enigma.js/blob/master/docs/qix/configuration.md#example-using-nodejs\n                host: senseConfig.host,\n                prefix: 'anon',\n                port: senseConfig.port,\n                unsecure: true\n            }\n        })\n        .then(qix => {\n\n            qix.app.createSessionObject({\n                    qInfo: { qType: 'cube' },\n                    qHyperCubeDef: {\n                        qDimensions: [{\n                            qDef: { qFieldDefs: ['Level 1'] }\n                        }, {\n                            qDef: { qFieldDefs: ['Level 2'] }\n                        }, {\n                            qDef: { qFieldDefs: ['Level 3'] }\n                        }]\n                    }\n                })\n                .then(model => {\n                    model.getHyperCubeData('/qHyperCubeDef', [{ qTop: 0, qLeft: 0, qWidth: 3, qHeight: 3333 }]).then(data => {\n                        // console.log('Result set from Qlik Sense:', data);\n                        var table = data[0].qMatrix;\n                        var tableWithChapters = insertSectionBreakers(table);\n                        // console.log('New data received, chapters added and now stored in in session var ', sessionName);\n                        Session.set(sessionName, tableWithChapters);\n                    })\n                })\n\n        })\n}\n\nfunction insertSectionBreakers(table) {\n    var currentLevel1, previousLevel1 = '';\n    var newTableWithChapter = [];\n\n    table.forEach(function(currentRow) {\n        var currentLevel1 = textOfLevel(currentRow, 1);\n        if (previousLevel1 !== currentLevel1) {\n            newTableWithChapter.push(currentLevel1)\n            previousLevel1 = currentLevel1;\n        }\n        newTableWithChapter.push(currentRow);\n    });\n    // console.log('table with chapters is', newTableWithChapter);\n    return newTableWithChapter;\n}\n\n\n\n/**\n * Auto-indent overflowing lines\n * @author Rob W http://stackoverflow.com/u/938089\n * @param code_elem HTMLCodeElement (or any element containing *plain text*)\n */\n// function autoindent(code_elem) {\n//     // Grab the lines\n//     var textContent = document.textContent === null ? 'textContent' : 'innerText';\n//     var lines = code_elem[textContent].split(/\\r?\\n/),\n//         fragment = document.createDocumentFragment(),\n//         dummy, space_width, i, prefix_len, line_elem;\n\n//     // Calculate the width of white space\n//     // Assume that inline element inherit styles from parent (<code>)\n//     dummy = document.createElement('span');\n//     code_elem.appendChild(dummy);\n//     // offsetWidth includes padding and border, explicitly override the style:\n//     dummy.style.cssText = 'border:0;padding:0;';\n//     dummy[textContent] = '          ';\n//     space_width = dummy.offsetWidth / 10;\n//     // Wipe contents\n//     code_elem.innerHTML = '';\n\n//     for (i = 0; i < lines.length; i++) {\n//         // NOTE: All preceeding white space (including tabs is included)\n//         prefix_len = /^\\s*/.exec(lines[i])[0].length;\n//         line_elem = fragment.appendChild(document.createElement('div'));\n//         line_elem.style.marginLeft = space_width * prefix_len + 'px';\n//         line_elem[textContent] = lines[i].substring(prefix_len);\n//     }\n//     code_elem.appendChild(fragment);\n// }\n",
			"file": "imports/ui/impress/ppt_integration.js",
			"file_size": 16067,
			"file_write_time": 131370608702074839,
			"settings":
			{
				"buffer_size": 15537,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "settings-development - example.json",
			"settings":
			{
				"buffer_size": 1816,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 784.0,
		"last_filter": "pack",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"P",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"package",
				"Preferences: Browse Packages"
			],
			[
				"tern",
				"TernJS: Reload"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 1056.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/server"
	],
	"file_history":
	[
		"/C/Users/mbj/Desktop/LiberKey/MyApps/Sublime Text Build 3083/Data/Packages/JSHint Gutter/JSHint.sublime-settings",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/server/proxy.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/simulateUserLogin.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/simulateUserLogin.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/users.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/users.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/UIHelpers.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/server/main.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/server/accounts.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/.meteor/versions",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/.meteor/packages",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layouts/layout.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/api/customers.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/api/server/QPSFunctions.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/api/server/QRSFunctionsApp.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step3.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step4.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/settings-development - example.json",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/introductionSecurity.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/architecture.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/OEMPartner.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/generation.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/api/server/QRSFunctionsStream.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/node_modules/eslint/package.json",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/ppt_integration.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/settings-development.json",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/impress.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/OEMPartner.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/ppt_integration.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/.eslintrc.json",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/useCases/useCaseSelection.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/node_modules/eslint/conf/eslint-all.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/nav.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/SSO/client/SSO.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/SSO/client/SSO.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/useCases/SSBI/SSBI.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/router.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/users/userOverview.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/server/publications.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/users/userOverview.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/steps.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/generation.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/documentation.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/APILogs.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/impress.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/APILogs.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/webIntegration.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/impressJSModifiedSource.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/stylesheets/highLight.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/package.json",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/impress.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/.meteor/local/build/programs/server/app/app.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopics.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/progressBar.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/node_modules/impress.js/js/impress.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/impressJSModifiedSource.js",
		"/C/Users/mbj/Desktop/LiberKey/MyApps/Sublime Text Build 3083/Data/Packages/HTML-CSS-JS Prettify/.jsbeautifyrc",
		"/C/Users/mbj/Documents/Documentatie/Qlikview inlezen/3 Security/Customized Authentication v2 0/Examples/Authenticate_aspx/Authenticate.aspx",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/README.md",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/node_modules/highlight.js/lib/highlight.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/client/stylesheets/highLight.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/api/config.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopicsCircular.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopicsCircular.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopics.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopics.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopics.css",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopicsCircular.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopics.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/integrationTopicsCircular.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/useCases/SSBI/SSBI.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/stylesheets/main.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layouts/layout.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/main.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/introduction.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/impress/introSlide.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/Impress/impress.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/Impress/impress.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/users.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/introductionSecurity.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/webIntegration.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/client/stylesheets/impress.css",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/main.css",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/impress/impress.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/Impress/impress.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layouts/regionLayout.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/mainButtons.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/useCases/useCaseSelection.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/videoOverview.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/users/userOverview.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/securityRules.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/users/userOverview.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/securityRules.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/users/login.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/startup/accounts-config.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/lib/yogiben.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client.pem",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/Login/login.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/Login/login.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/users.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/main.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/steps.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/notFound.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/pages/introduction.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layouts/regionLayout.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/mainButtons.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/useCases/SSBI/SSBI.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/useCases/SSBI/SSBI.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/layouts/regionLayout.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step2.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step2.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step3.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layout.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step4.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step2.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/layout.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/useCases/useCaseSelection.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/useCases/useCaseSelection.html",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/customer.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/mainButtons.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/mainButtons.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/simulateUserLogin.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step4.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step4.js",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step3.html",
		"/C/Users/mbj/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/step3.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/imports/ui/generation/OEMPartnerSide/customerOverview.js",
		"/C/Users/MBJ/Documents/GitHub/QRSMeteor/client/lib/site/globals/site.variables.import.less"
	],
	"find":
	{
		"height": 64.0
	},
	"find_in_files":
	{
		"height": 102.0,
		"where_history":
		[
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\generation\\OEMPartnerSide",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client\\lib",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\server",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\generation",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\generation\\OEMPartnerSide",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\server",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\pages",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\pages",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui\\pages",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client\\lib",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\server",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client\\lib",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports\\ui",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\server",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\server",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\client",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor\\imports",
			"C:\\Users\\MBJ\\Documents\\GitHub\\QRSMeteor",
			"C:\\Meteor projects\\slager 10dec\\client",
			"C:\\Meteor projects\\slager 10dec",
			"C:\\Users\\Qlik\\Meteor projects\\firstmeteor",
			"C:\\Users\\Qlik\\Meteor projects\\pluralsight\\1-exercise-files\\rocket-shop-complete",
			"C:\\Users\\Qlik\\Meteor projects\\pluralsight\\1-exercise-files\\rocket-shop-complete\\client",
			"C:\\Users\\Qlik\\Meteor projects\\pluralsight\\1-exercise-files\\rocket-shop-complete\\server",
			"C:\\Users\\Qlik\\Meteor projects\\pluralsight\\1-exercise-files\\rocket-shop-complete\\lib",
			"C:\\Users\\Qlik\\Meteor projects\\pluralsight\\1-exercise-files\\rocket-shop-complete"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"youtu",
			"youtube",
			"edge",
			"chrome",
			"ppt_integrationMain",
			"dropdown",
			"reload",
			"modal",
			"{{> users",
			"{{> userse",
			"Customers",
			"customers",
			".find",
			"selectedCustomerDoc",
			"isselectedCustomer",
			"selectedCustomer",
			"console.log",
			"selectedCustomer",
			"selectedCustomerDoc",
			"autoindent",
			"qixschema",
			"simulates",
			"insertTemplateAndDummyCustomers",
			"facebook",
			"twitter",
			"facebook",
			"name=\"users\"",
			"users",
			"getApps",
			"qsocks",
			"APIIntroduction",
			"Overview of the key APIs to be used by your SaaS platform",
			"engine",
			"high",
			"web",
			"how",
			"on",
			"youtube",
			"IntegrationPresenatationSelectionObject",
			"replace",
			"segment",
			"URL",
			"mind",
			"Mind",
			"hljs",
			"topo",
			"zoom",
			"diagram",
			"img",
			"active",
			"entered",
			"Level 2",
			"transition",
			"fade",
			"equals",
			"activeStepNr",
			");\n",
			"xvalue",
			"topics",
			"slidecontent",
			"documentation",
			"topics",
			"one",
			"700",
			"q",
			"ou have not selected a user you want to simulate the Single Sign on with. Please select a user",
			"image",
			"embed",
			"steps",
			"progress",
			"RZuJ",
			"rzu",
			"init",
			".hint",
			"hint",
			"blockquote",
			"iframechapter",
			"\\",
			"background-image",
			"slide",
			"ppt_integration",
			"selector",
			"sidebar",
			"slideContent",
			"sourcecode",
			"data-rotate=\"80\"",
			"rotate",
			"z step",
			"160px",
			"blockquote",
			"opacity",
			"li",
			"message",
			"160",
			"first",
			"margin: 0em 0em 1em;",
			"margin: 0em 0em 1em; */",
			"ul",
			"quote",
			"blockqu",
			"block",
			"img",
			"sidebar",
			"pusher",
			"bullet",
			"bullets",
			"top",
			"new data",
			"events",
			"hint",
			"81",
			"export",
			"height",
			"8",
			"80",
			"scale",
			"init",
			"scale",
			"80",
			"maxscale",
			"getapps",
			"startup",
			"init",
			"emeXGd",
			"wrap",
			"({\n",
			"level",
			"sort"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"selectedCustomerStep1",
			"IntegrationPresenatationSelectionSheet",
			"\\\\",
			"",
			"z step introduction",
			"'anon'",
			"slideExists",
			"getLevel1to3",
			"getIntegrationTopics",
			"{\n    schema: qixschema,\n    appId: appId,\n    session: { //https://github.com/qlik-oss/enigma.js/blob/master/docs/qix/configuration.md#example-using-nodejs\n        host: senseConfig.host,\n        prefix: senseConfig.virtualProxyClientUsage,\n        port: senseConfig.port,\n        unsecure: true\n    }",
			"qixConfig",
			"<h2 class=\"ui icon header\">\n  <i class=\"settings icon\"></i>\n  <div class=\"content\">\n    Account Settings\n    <div class=\"sub header\">Manage your account settings and set e-mail preferences.</div>\n  </div>\n</h2>",
			"class=\"ui segment\"",
			"h1",
			"",
			".z.step",
			"#demoStep3",
			"",
			".z.step",
			"z step",
			".iStep",
			"iStep",
			"step",
			".iStep",
			"class=\"iStep\"",
			".iStep",
			"iStep",
			"questions",
			"",
			"#insertCustomer",
			"<div class=\"ui segment SSBI\">",
			"ssbi_logging_in",
			"",
			"Select this user",
			"",
			"<div class=\"description\">",
			"<div class=\"ui dimmer\">\n        <div class=\"content\">\n            <div class=\"center\">\n                <div class=\"ui button\">Select this demo</div>\n            </div>\n        </div>\n    </div>",
			"saasdemo.qlik.com",
			"step3or4",
			"mainButtons",
			"h4",
			"h3",
			" <div class=\"column\">",
			"h4",
			"five wide",
			"h3",
			"step4Buttons",
			"four wide",
			"five wide cl",
			"five wide c",
			"individual",
			"DIV",
			"mini",
			"h2",
			"step1NoCustomerScreen",
			"",
			"nlsch-mbj3",
			"console.log",
			"//console.log",
			"passport",
			"options.Certificate",
			"rgb(220,220,220)",
			"fill: rgb(215,215,217);",
			"mini",
			"tiny",
			"PRESALES1",
			"senseConfig.SenseServerInternalLanIP +':' + senseConfig.port + '/'+ senseConfig.virtualProxy",
			"senseConfig.SenseServerInternalLanIP",
			"appId",
			"Meteor.settings.private",
			"isSelectedCustomer",
			"Customer",
			"selectedCustomer",
			"h4",
			"500",
			"400225",
			"400",
			"",
			"name",
			"h4",
			"REST_Log.",
			"from '/imports/api/server/QRSFunctionsApp';",
			"from '/imports/api/server/QRSFunctionsStream';",
			"from '/imports/api/server/QRSFunctionsSystemRules';",
			"/imports/api/server/QRSFunctionsSystemRules",
			"from '/imports/api/server/QRSFunctionsStream';",
			"passport",
			"Meteor.settings.public",
			"\"",
			"'",
			"virtualProxyClientUsage",
			"users",
			"h3",
			"QRS Functions Appp",
			"updateLocalSenseCopy",
			"UpdateLocalSenseCopy",
			"updateSenseInfo",
			"in Qlik Sense via the QRS API",
			"currentApp.name",
			"id",
			"",
			"''",
			"",
			"_senseConfig",
			"senseConfig",
			"NPM_QRS",
			"QSApp.",
			"return QS.",
			"P",
			"Meteor.Error",
			"new P",
			"P",
			"checked",
			"true",
			"updateSenseInfo",
			"\\\\",
			"",
			"category",
			"",
			"customers",
			"order",
			"Orders",
			"Slagerij"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "imports/ui/impress/ppt_integration.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6728,
						"regions":
						{
						},
						"selection":
						[
							[
								733,
								733
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_enabled": true,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "settings-development.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2007,
						"regions":
						{
						},
						"selection":
						[
							[
								205,
								215
							]
						],
						"settings":
						{
							"git_gutter_enabled": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "imports/ui/impress/ppt_integration.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15537,
						"regions":
						{
						},
						"selection":
						[
							[
								7155,
								7233
							]
						],
						"settings":
						{
							"auto_complete": false,
							"git_gutter_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4747.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "settings-development - example.json",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1816,
						"regions":
						{
						},
						"selection":
						[
							[
								1088,
								1123
							]
						],
						"settings":
						{
							"git_gutter_enabled": true,
							"syntax": "Packages/JavaScript/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 118.0
	},
	"pinned_build_system": "",
	"project": "qrs.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"client.pem"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 1000.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\mbj\\Documents\\GitHub\\social2\\social.sublime-project"
			]
		],
		"width": 760.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 303.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
